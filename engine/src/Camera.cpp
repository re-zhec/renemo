////////////////////////////////////////////////////////////////////////////////
/// \copyright MIT License                                                   ///
/// \author    Caylen Lee                                                    ///
/// \date      2019                                                          ///
////////////////////////////////////////////////////////////////////////////////
#include "Camera.hpp"
#include "World/World.hpp"
#include "entity/Entity.hpp"

namespace nemo
{

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

Camera::Camera(const type::Vector2 size)
	: _size(size)
{
}

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

void
Camera::setCenter(const Entity& entity)
noexcept
{
	_position = entity.position();
}

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

void
Camera::moveBy(const type::Vector2 velocity)
noexcept
{
	_position += velocity;
}

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

void
Camera::drawView(
	sf::RenderWindow&            window, 
	const World&                 world,
	const std::vector< Entity >& entities
) const
{
	
}

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

} 