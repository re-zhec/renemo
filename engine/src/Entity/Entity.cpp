////////////////////////////////////////////////////////////////////////////////
/// \copyright MIT License                                                   ///
/// \author    Caylen Lee                                                    ///
/// \date      2019                                                          ///
////////////////////////////////////////////////////////////////////////////////
#include "Entity/Entity.hpp"
#include "Entity/EntityInput.hpp"
#include "Entity/EntityPhysics.hpp"
#include "Entity/EntityGraphics.hpp"

#include <algorithm>
#include <utility>
#include <SFML/Graphics/Color.hpp>

namespace nemo
{

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

Entity::Entity(
	std::unique_ptr< EntityInput >&&    input,
	std::unique_ptr< EntityPhysics >&&  physics,
	std::unique_ptr< EntityGraphics >&& graphics
)
	: _input(std::move(input))
	, _physics(std::move(physics))
	, _graphics(std::move(graphics))
{
	_hitbox.setFillColor(sf::Color::Red);
	_hitbox.setSize({ 100.f, 100.f });
}

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

void
Entity::stopMoving()
{
	_velocity = { 0, 0 };
}

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

void
Entity::setToGoLeft(const float x)
{
	_velocity = { -x, 0 };
}

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

void
Entity::setToGoUp(const float y)
{
	_velocity = { 0, -y };
}

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

void
Entity::setToGoRight(const float x)
{
	_velocity = { x, 0 };
}

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

void
Entity::setToGoDown(const float y)
{
	_velocity = { 0, y };
}

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

void
Entity::goToNewPosition()
{
	_hitbox.move(_velocity);
}

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

void
Entity::drawOnWindow(sf::RenderWindow& window)
const
{
	window.draw(_hitbox);
}

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

void
Entity::updateObject(sf::RenderWindow& window)
{
	_input->updateObjectAction(*this);
	_physics->updateObjectInteraction(*this);
	_graphics->updateObjectDisplay(*this, window);
}

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

} // namespace nemo